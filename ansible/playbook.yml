---
- hosts: gcloud
  vars:
     server_name: ibraca.kal
     symfony_root_dir: /var/www/project
     symfony_web_dir: "{{ symfony_root_dir }}/web"
     symfony_var_dir: "{{ symfony_root_dir }}/var"
     symfony_console_path: "{{ symfony_root_dir }}/bin/console"
     symfony_conf_path: "{{ symfony_root_dir }}/app/config"
     symfony_web_path: "{{ symfony_root_dir }}/web"

  tasks:
     - ping: ~
     - name: Update APT pakage manager repositories cache
       become: true
       apt:
         update_cache: yes

     - name: Upgrade installed pakages
       become: true
       apt:
         upgrade: dist


     - name: Install cowsay - it's probabily important
       apt:
         name: cowsay
       become: true

     - name: Install low-level utilities
       become: true
       apt:
         name: "{{ item }}"
       with_items:
         - zip
         - unzip


     - name: Install Git VSC
       become: true
       apt:
         name: git
         state: latest

     - name: Install MYSQL DB server
       become: true
       apt:
         name: mysql-server
         state: latest
       notify: Restart Nginx

     - name: Change the mysql root password
       script: "{{ playbook_dir }}/files/mysupdaterootpass.sh"

     - name: Install nginx webserver
       become: true
       apt:
        name: nginx
        state: latest

     - name: add PHP 7 ppa repository
       become: true
       apt_repository:
            repo: 'ppa:ondrej/php'

     - name: Install PHP packages
       become: true
       apt:
         name: "{{ item }}"
         state: latest
       with_items:
         - php7.1-cli
         - php7.1-curl
         - php7.1-fpm
         - php7.1-mysql
         - php7.1-intl
         - php7.1-xml
       notify: Restart PHP-FPM

     - name: Set date.timezone for CLI
       become: true
       lineinfile:
         path: /etc/php/7.1/cli/php.ini
         regexp: "date.timezone ="
         line: "date.timezone = UTC"
       notify: Restart PHP-FPM

     - name: Set date.timezone for FPM
       become: true
       lineinfile:
         path: /etc/php/7.1/fpm/php.ini
         regexp: "date.timezone ="
         line: "date.timezone = UTC"
       notify: Restart PHP-FPM

     - name: Remove project directory content
       become: true
       file:
            path: "{{ symfony_root_dir }}"
            state: absent


     - name: Create project directory and set its permissions
       become: true
       file:
            path: "{{ symfony_root_dir }}"
            state: directory
            owner: "www-data"
            group: "www-data"
            recurse: yes

     - name: Checkout Git repository
       become: true
       git:
         repo: https://github.com/knpuniversity/ansible.git
         dest: "{{ symfony_root_dir }}"
         force: yes
       tags:
         - deploy


     - name: Copy and rename parameters.yml.dist to parameters.yml
       become: true
       command: "cp {{ symfony_conf_path }}/parameters.yml.dist  {{ symfony_conf_path }}/parameters.yml"
       tags:
         - deploy

     - name: Update password inside parameter file
       become: true
       lineinfile:
            path: "{{ symfony_conf_path }}/parameters.yml"
            regexp: "database_password:"
            line: "    database_password:"
       tags:
         - deploy

     - name: Set var directory permissions
       become: true
       file:
         path: "{{ symfony_var_dir }}"
         state: directory
         mode: "a+rwx"
         recurse: yes

       tags:
         - permissions
         - deploy

     - name: Update app_dev to allow access to to debug
       become: true
       lineinfile:
            path: "{{ symfony_web_path }}/app_dev.php"
            regexp: "if \\("
            line: "/* if \\(isset\\($_SERVER\\['HTTP_CLIENT_IP'\\]\\)"
       tags: deploy

     - name: Update app_dev to allow access to to debug
       become: true
       lineinfile:
            path: "{{ symfony_web_path }}/app_dev.php"
            regexp: "}"
            line: '}*/'
       tags: deploy

     - name: Download composer
       script: scripts/install_composer.sh

     - name: Move composer globaly
       become: true
       command: "mv composer.phar /usr/local/bin/composer"

     - name: Set permissions on composer
       become: true
       file:
          path: /usr/local/bin/composer
          mode: "a+x"

     - name: Install composer's dependencies
       become: true
       composer:
            working_dir: "{{symfony_root_dir}}"
            no_dev: no
       tags:
         - deploy

     - name: Add Symfony config template to the Nginx available sites
       become: true
       template:
          src: templates/symfony.conf
          dest: "/etc/nginx/sites-available/{{ server_name }}.conf"
       notify: Restart Nginx

     - name: Enable Symfony config template from  Nginx available sites
       become: true
       file:
          src: "/etc/nginx/sites-available/{{ server_name }}.conf"
          dest: "/etc/nginx/sites-enabled/{{ server_name }}.conf"
          state: link
       notify: Restart Nginx

     - name: Add enabled nginx site /etc/hosts
       become: true
       lineinfile:
            path: /etc/hosts
            regexp: "{{ server_name }}"
            line: "127.0.0.1 {{ server_name }}"


     # Symfony console commands

     - name: Create DB if not exists
       become: true
       command: "{{ symfony_console_path }} doctrine:database:create  --if-not-exists"
       tags:
         - deploy

     - name: Execute migrations
       command: "{{ symfony_console_path }} doctrine:migrations:migrate  --no-interaction"
       tags:
         - deploy

     - name: Load data fixtures
       command: "{{ symfony_console_path }} hautelook_alice:doctrine:fixtures:load  --no-interaction"
       tags:
         - deploy

  handlers:
    - name: Restart Nginx
      become: true
      service:
        name: nginx
        state: restarted

    - name: Restart PHP-FPM
      become: true
      service:
        name: nginx
        state: restarted

